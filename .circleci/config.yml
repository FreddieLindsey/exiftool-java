version: 2
jobs:
  install_exiftool:
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      EXIFTOOL_VERSION: 11.23
    steps:
      - run:
          name: Setup PATH variable
          command: |
            mkdir /home/circleci/exiftool
            echo 'export PATH=/home/circleci/exiftool:$PATH' >> $BASH_ENV
      - run:
          name: Download and Install ExifTool
          command: |
            curl -o exiftool.tar.gz http://owl.phy.queensu.ca/~phil/exiftool/Image-ExifTool-$EXIFTOOL_VERSION.tar.gz
            tar -xvf exiftool.tar.gz
            cd Image-ExifTool-$EXIFTOOL_VERSION
            mv exiftool /home/circleci/exiftool/
            mv lib /home/circleci/exiftool/
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - $BASH_ENV
            - exiftool


  checkout:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
      - run: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: ./gradlew build

  test:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run:
          name: Enable exiftool PATH
          command: |
            echo 'export PATH=/home/circleci/exiftool:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - attach_workspace:
          at: /home/circleci
      - run: ./gradlew test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  publish:
    docker:
      - image: circleci/openjdk:8-jdk
      steps:
        - attach_workspace:
            at: /home/circleci
        - run:
            name: Prepare gradle.properties
            command: |
              cat gradle.properties.template | envsubst > /home/circleci/gradle.properties
        - run: ./gradlew uploadArchives

workflows:
  version: 2
  build_and_test:
    jobs:
      - install_exiftool
      - checkout
      - build: { requires: [ install_exiftool, checkout ] }
      - test: { requires: [ install_exiftool, checkout ] }
      - publish:
          requires: [ build, test ]